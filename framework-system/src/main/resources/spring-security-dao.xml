<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans.xsd
					http://www.springframework.org/schema/security
					http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http use-expressions="false" auto-config="false" entry-point-ref="authenticationEntryPoint">

		<security:intercept-url pattern="/system/mainframe/login"  access="IS_AUTHENTICATED_ANONYMOUSLY" /> 
		<security:intercept-url pattern="/system/mainframe/login/csrf"  access="IS_AUTHENTICATED_ANONYMOUSLY" />
		
		<security:access-denied-handler error-page="/system/exception/accessDenied"/>

		<security:custom-filter ref="pretreatmentAuthenticationProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:custom-filter ref="centitPowerFilter" before="FILTER_SECURITY_INTERCEPTOR" />
		<security:custom-filter ref="logoutFilter" position="LOGOUT_FILTER" />
		<!-- token-repository-ref="csrfTokenRepository" -->
		<security:csrf disabled="true" />
    </security:http>

	<bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">  
    	<constructor-arg index="0" value="/system/mainframe/login" />
	</bean>
	
	<bean id="centitAccessDecisionManagerBean"
		 class="com.centit.framework.security.DaoAccessDecisionManager" 
		 scope="singleton">
		 <property name="allResourceMustBeAudited" value="false" />		 
	</bean>
	
	<bean id="centitSecurityMetadataSource"
		 class="com.centit.framework.security.DaoInvocationSecurityMetadataSource" 
		 scope="singleton">
	</bean>
		
    <!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 我们的所有控制将在这三个类中实现，解释详见具体配置 -->
    <bean id="centitPowerFilter"
    	 class="com.centit.framework.security.DaoFilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager" />
        <!-- centitAccessDecisionManagerBean hostIpFilterDecisionManagerBean -->
        <property name="accessDecisionManager" ref="centitAccessDecisionManagerBean" />
        <!-- centitSecurityMetadataSource hostIpSecurityMetadataSource -->
        <property name="securityMetadataSource" ref="centitSecurityMetadataSource" />
    </bean>

 	<security:authentication-manager alias="authenticationManager" erase-credentials="false" >        
		<security:authentication-provider ref="authenticationProvider"/>
	</security:authentication-manager>
	
	<bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="hideUserNotFoundExceptions" value="false" />
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="passwordEncoder" ref="passwordEncoder" />  
		<property name="saltSource" ref="saltSource" />  
	</bean>
 	<bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">  
	    <property name="userPropertyToUse" value="userCode"/>  
	</bean>  
	
	<!-- 前置校验 -->
	<bean id="pretreatmentAuthenticationProcessingFilter"
		class="com.centit.framework.security.PretreatmentAuthenticationProcessingFilter">
		<property name="authenticationManager" ref="authenticationManager" />		
		<property name="checkCaptcha" value="false" /><!-- 是否校验验证码  -->
		<property name="maxTryTimes" value="0" /><!-- 允许最大尝试次数，0 表示没有限制  -->
		<property name="checkTimeTnterval" value="3" /><!-- 校验时间间隔单位为分钟，超过这个时间前面的尝试清零  -->
		<property name="checkType" value="loginName" /><!-- 建议依据登录名或者ip地址loginName hostIp-->
		<property name="lockMinites" value="3" /><!-- 锁定时间 单位分钟-->
		<property name="continueChainBeforeSuccessfulAuthentication" value="false" /> <!-- 验证成功后继续做系统的验证-->
		<property name="authenticationFailureHandler"
			ref="ajaxFailureHandler"></property>
		<property name="authenticationSuccessHandler" ref="ajaxSuccessHandler"/>
	</bean>	
	
	<bean id="ajaxFailureHandler" class="com.centit.framework.security.AjaxAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/system/mainframe/login/error"></property>
		<property name="writeLog" value="false" />
    </bean>
     
    <bean id="ajaxSuccessHandler" class="com.centit.framework.security.AjaxAuthenticationSuccessHandler">
    	<property name="writeLog" value="true" />
    </bean>
 
	<!--登出拦截器-->
	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg index="0" value="/system/mainframe/login" />
		<constructor-arg index="1">
			<list>				
				<bean class="org.springframework.security.web.csrf.CsrfLogoutHandler" >
					<constructor-arg index="0">
						<ref bean="csrfTokenRepository" />
					</constructor-arg>
				</bean>
				<bean class="org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler">
					<constructor-arg index="0">
						<array>
							<value>JSESSIONID</value>
							<value>remember-me</value>
						</array>
					</constructor-arg>
				</bean>
				<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
			</list>
		</constructor-arg>
	</bean>
	 
</beans>